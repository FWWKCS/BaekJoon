# https://www.acmicpc.net/problem/24313

# 알고리즘의 소요 시간을 나타내는 O-표기법(빅-오)을 다음과 같이 정의하자.

# O(g(n)) = {f(n) | 모든 n ≥ n0에 대하여 f(n) ≤ c × g(n)인 양의 상수 c와 n0가 존재한다}

# 이 정의는 실제 O-표기법(https://en.wikipedia.org/wiki/Big_O_notation)과 다를 수 있다.

# 함수 f(n) = a1n + a0, 양의 정수 c, n0가 주어질 경우 O(n) 정의를 만족하는지 알아보자.


# 첫째 줄에 함수 f(n)을 나타내는 정수 a1, a0가 주어진다. (0 ≤ |ai| ≤ 100)

# 다음 줄에 양의 정수 c가 주어진다. (1 ≤ c ≤ 100)

# 다음 줄에 양의 정수 n0가 주어진다. (1 ≤ n0 ≤ 100)


# f(n), c, n0가 O(n) 정의를 만족하면 1, 아니면 0을 출력한다.


# a1*n + a0 <= c * n0


# f(n) = a1*n + a0
# g(n) = O(n) = n

# 7 7 : f(n) = 7n+7
# 8 = c
# 10 = n0

#  n >= 10인 모든 n에 대하여 f(n) <= c*n 를 만족하면 1

a1, a0 = list(map(int,input().split()))

c = int(input())

n0 = int(input())

# 지정한 n0를 최솟값으로 n0보다 큰 모든 값에 대하여
# 각각의 함수 f(n)과 g(n)의 관계가 O(g(n)) 정의를 만족

# 이 조건을 만족하려면
# 함숫값이 최솟값인 n0에서 f(n0) <= cg(n0) 를 만족해야한다
# 동시에 g(n)의 기울기가 f(n)의 기울기보다 커야한다

# 위 조건을 동시에 만족하면 n0이상의 모든 값에서 O(g(n))의 정의를 만족한다

if a1*n0+a0 <= c*n0 and a1 <= c : print(1)
else : print(0)  



